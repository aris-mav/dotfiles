(defsrc
 grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
 tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
 caps a    s    d    f    g    h    j    k    l    ;    '    ret
 lsft z    x    c    v    b    n    m    ,    .    /    rsft
 lctl      lmet lalt      spc            ralt rctl 
 )

(deflayer base
 grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
 tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
 @es  @a   @s   @d   @f   @g   @h   @j   @k   @l   @;   @tb  ret
 lsft z    x    c    v    b    n    m    ,    .    /    rsft
 lctl      lmet lalt      @sp            ralt rctl 
 )

(deflayer nomods
 grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
 tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
 esc  a    s    d    f    g    h    j    k    l    ;    tab  ret
 lsft z    x    c    v    b    n    m    ,    .    /    rsft
 lctl      lmet lalt      spc            ralt rctl 
 )

(deflayer spc_layer
 _    _    _    _    _    _    _    _    _    _    _    _    _    _
 _    1    2    3    4    5    6    7    8    9    0    _    _    _
 _    lmet lalt lsft lctl -    left down up   rght '    _    _
 _    caps del  @cw  bspc =    `    ret  [    ]    \    _
 _         _    _         XX             _    _ 
 )

(deflayer s_spc_layer
 _    _    _    _    _    _    _    _    _    _    _    _    _    _
 _    S-1  S-2  S-3  S-4  S-5  S-6  S-7  S-8  S-9  S-0  _    _    _
 _    lmet lalt lsft lctl S--  home pgdn pgup end  S-'  _    _
 _    caps del  @cw  bspc S-=  S-`  ret  S-[  S-]  S-\  _
 _         _    _         XX             _    _ 
 )

(deflayer f_layer
 _    _    _    _    _    _    _    _    _    _    _    _    _    _
 _    _    _    _    _    _    _    f1   f2   f3   f4   _    _    _
 _    _    _    _    _    _    _    f5   f6   f7   f8   _    _
 _    _    _    _    _    _    _    f9   f10  f11  f12  _
 _    _    _              _              _    _ 
 )

(defvar
 tap-time 200
 hold-time-long 140
 hold-time-mid 120
 hold-time-short 100

 left-hand-keys (
    q w e r t
    a s d f g
    z x c v b
  )
  right-hand-keys (
    y u i o p
    h j k l ;
    n m , . /
  )
 )

 (deffakekeys
  to-base (layer-switch base)
)

(defalias
  tap (multi
    (layer-switch nomods)
    (on-idle-fakekey to-base tap 20)
  )
)

(defalias

 sp (tap-hold-press $tap-time $hold-time-long spc (layer-while-held spc_layer))
 es (tap-hold-press $tap-time $hold-time-long esc (layer-while-held s_spc_layer))
 tb (tap-hold-press $tap-time $hold-time-long tab (layer-while-held s_spc_layer))

 a (tap-hold-release-keys $tap-time 300              (multi a @tap) lmet $left-hand-keys)
 s (tap-hold-release-keys $tap-time $hold-time-mid   (multi s @tap) lalt $left-hand-keys)
 d (tap-hold-release-keys $tap-time $hold-time-short (multi d @tap) lsft $left-hand-keys)
 f (tap-hold-release-keys $tap-time $hold-time-mid   (multi f @tap) lctl $left-hand-keys)

 g (tap-hold-press $tap-time $hold-time-mid g (layer-while-held f_layer))
 h (tap-hold-press $tap-time $hold-time-mid h (layer-while-held f_layer))

 j (tap-hold-release-keys $tap-time $hold-time-mid   (multi j @tap) rctl $right-hand-keys)
 k (tap-hold-release-keys $tap-time $hold-time-short (multi k @tap) rsft $right-hand-keys)
 l (tap-hold-release-keys $tap-time $hold-time-mid   (multi l @tap) lalt $right-hand-keys)
 ; (tap-hold-release-keys $tap-time 300              (multi ; @tap) rmet $right-hand-keys)

 cw (caps-word 2000)

 )

