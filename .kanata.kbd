(defcfg process-unmapped-keys yes)

(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl      lmet lalt      spc            ralt rctl 
)

(deflayer base
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  @cap @a   @s   @d   @f   @g   @h   @j   @k   @l   @;   '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl      lmet lalt      @sp            ralt rctl 
)

(deflayer spc_layer
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    1    2    3    4    5    6    7    8    9    0    _    _    _
  caps _    tab  bspc _    ret  left down up   rght grv  _    _
  _    _    del  caps _    [    ]    _    -    =    \    _
  _         _    _         XX             _    _ 
)

(deflayer esc_layer
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  _
  XX   _    _    _    _    _    home pgdn pgup end  tab  _    _
  _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _              _              _    _ 
)

(defvar
  tap-time 200
  hold-time 150
  hold-time-short 100
)

(defalias
  sp (tap-hold-press $tap-time $hold-time spc (layer-while-held spc_layer))
  cap (tap-hold-press $tap-time $hold-time esc (layer-while-held esc_layer))

  a (multi f24 (tap-hold $tap-time $hold-time a lmet))
  s (multi f24 (tap-hold $tap-time $hold-time s lalt))
  d (multi f24 (tap-hold $tap-time $hold-time-short d lsft))
  f (multi f24 (tap-hold $tap-time $hold-time f lctl))
  g (multi f24 (tap-hold $tap-time $hold-time g ret))
  h (multi f24 (tap-hold $tap-time $hold-time h bspc))
  j (multi f24 (tap-hold $tap-time $hold-time j rctl))
  k (multi f24 (tap-hold $tap-time $hold-time-short k rsft))
  l (multi f24 (tap-hold $tap-time $hold-time l ralt))
  ; (multi f24 (tap-hold $tap-time $hold-time ; rmet))
)


;; INSTRUCTIONS TO RUN IN BACKGROUND (linux)
;;
;; Follow steps here : https://github.com/jtroo/kanata/blob/main/docs/setup-linux.md 
;; (so that the keyboard is recognised without sudo)
;;
;; Add the following to a file in ~/.config/systemd/user/kanata.service
;; ------------------------------------------------------
;; [Unit]
;; Description=Kanata keyboard remapper
;; Documentation=https://github.com/jtroo/kanata
;; 
;; [Service]
;; Environment=PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:${HOME}/.local/bin
;; Environment=DISPLAY=:0
;; Type=simple
;; ExecStart=/usr/bin/sh -c "exec $HOME/software/kanata/target/debug/kanata --cfg $HOME/.kanata.kbd"
;; 
;; Restart=no
;; 
;; [Install]
;; WantedBy=default.target
;; ------------------------------------------------------
;; (of course, edit paths in ExecStart if needed)
;;
;; Run systemctl --user start kanata.service to start kanata daemon
;; Run systemctl --user enable kanata.service so it may autostart whenever the current user logs in.
;; Run systemctl --user status kanata.service to check if kanata daemon is running or not.


